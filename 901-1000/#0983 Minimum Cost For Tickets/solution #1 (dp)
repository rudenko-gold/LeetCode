class Solution {
public:
    int mincostTickets(vector<int>& days, vector<int>& costs) {
        vector<int> dp(366, 0);
        for (int i = 0; i < days.size(); i++) {
            dp[days[i]] = costs[0] + dp[days[i] - 1];
            if (days[i] >= 7) {
                dp[days[i]] = min(dp[days[i]], costs[1] + dp[days[i] - 7]);
            } else {
                dp[days[i]] = min(dp[days[i]], costs[1]);
            }
            if (days[i] >= 30) {
                dp[days[i]] = min(dp[days[i]], costs[2] + dp[days[i] - 30]);
            } else {
                dp[days[i]] = min(dp[days[i]], costs[2]);
            }
            if (i != days.size() - 1) {
                for (int j = days[i] + 1;j < days[i + 1]; j++) {
                    dp[j] = dp[j - 1];
                }
            }
        }
        
        return dp[days[days.size() - 1]];
    }
};
