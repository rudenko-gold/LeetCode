LeetCode Problem Solving Statistics

Status on 15.07.19:
Problems Solved - xxx (Easy - xxx; Medium - xxx, Hard - xxx)
Mock-Interview Completed: 1 (14.07.19 - Interviewr: Melkonyan Alex)

To-Learn List:
- Longest increasing subsequence (n*log n)
- Permutations generating
- Combinations generating
- Combinarotics objects generating
- Least Common Ancestor
- Heap
- Generate Parentheses (done)
- Z-function
- KMP
- Manacher's algorithm
- Fisher-Yates Algorithm
- Floyd's Tortoise and Hare (Cycle Detection)

--------------May--------------

#0001 (two-sum)
#0167 (two-sum-ii-input-array-is-sorted)
#0034 (find-first-and-last-position-of-element-in-sorted-array)

-------------June--------------

10.06 (1)
#0389 (find-the-difference)

11.06 (7)
#0007 (reverse-integer)
#0009 (palindrome-number)
#0026 (remove-duplicates-from-sorted-array)
#0069 (sqrtx)
#0136 (single-number)
#0066 (plus-one)
#0190 (reverse-bits)

12.06 (11)
#0191 (number-of-1-bits)
#0633 (sum-of-square-numbers)
#0367 (valid-perfect-square)
#0020 (valid-parentheses)
#0125 (valid-palindrome)
#0746 (min-cost-climbing-stairs)
#0693 (binary-number-with-alternating-bits)
#0709 (to-lower-case)
#0169 (majority-element)
#0035 (search-insert-position)
#0083 (remove-duplicates-from-sorted-list)

13.06 (1)
#0155 (min-stack)

14.06 (12)
#0112 (path-sum)
#0374 (guess-number-higher-or-lower)
#0070 (climbing-stairs)
#0509 (fibonacci-number)
#0121 (best-time-to-buy-and-sell-stock)
#0198 (house-robber)
#0303 (range-sum-query-immutable)
#0104 (maximum-depth-of-binary-tree)
#0559 (maximum-depth-of-n-ary-tree)
#0119 (pascals-triangle-ii)
#0771 (jewels-and-stones)
#0938 (range-sum-of-bst)

15.06 (7)
#0657 (robot-return-to-origin)
#0977 (squares-of-a-sorted-array)
#0961 (n-repeated-element-in-size-2n-array)
#0905 (sort-array-by-parity)
#0832 (flipping-an-image)
#0804 (unique-morse-code-words)
#1021 (remove-outermost-parentheses)

16.06 (20)
#0728 (self-dividing-numbers)
#0477 (total-hamming-distance)
#0461 (hamming-distance)
#1051 (height-checker)
#0852 (peak-index-in-a-mountain-array)
#0561 (array-partition-i)
#0700 (search-in-a-binary-search-tree)
#1078 (occurrences-after-bigram)
#0589 (n-ary-tree-preorder-traversal)
#0590 (n-ary-tree-postorder-traversal)
#0965 (univalued-binary-tree)
#0867 (transpose-matrix)
#0908 (smallest-range-i)
#0344 (reverse-string)
#0557 (reverse-words-in-a-string-iii)
#0897 (increasing-order-search-tree)
#0345 (reverse-vowels-of-a-string)
#0648 (replace-words)
#0412 (fizz-buzz)
#0238 (product-of-array-except-self) !!!

17.06 (15)
#0100 (same-tree)
#0053 (maximum-subarray)
#0058 (length-of-last-word)
#0067 (add-binary)
#0054 (spiral-matrix)
#0059 (spiral-matrix-ii)
#0075 (sort-colors)
#0055 (jump-game)
#0078 (subsets)
#0931 (minimum-falling-path-sum)
#0540 (single-element-in-a-sorted-array)
#0946 (validate-stack-sequences)
#0515 (find-largest-value-in-each-tree-row)
#0297 (serialize-and-deserialize-binary-tree)
#0449 (serialize-and-deserialize-bst)

18.06 (13)
#1047 (remove-all-adjacent-duplicates-in-string)
#0496 (next-greater-element-i)
#0476 (number-complement)
#0704 (binary-search)
#0500 (keyboard-row)
#0463 (island-perimeter)
#0884 (uncommon-words-from-two-sentences)
#0575 (distribute-candies)
#0204 (count-primes)
#0429 (n-ary-tree-level-order-traversal)
#0102 (binary-tree-level-order-traversal)
#0806 (number-of-lines-to-write-string)
#0300 (longest-increasing-subsequence) !!! Trivial

19.06 (21)
#0560 (subarray-sum-equals-k)
#0202 (happy-number)
#0258 (add-digits)
#0263 (ugly-number)
#0264 (ugly-number-ii) !!! Trivial
#0387 (first-unique-character-in-a-string)
#0046 (permutations)
#0237 (delete-node-in-a-linked-list)
#0203 (remove-linked-list-elements)
#0242 (valid-anagram)
#0206 (reverse-linked-list) !!! ONLY ITERATIVLY
#0283 (move-zeroes)
#0217 (contains-duplicate)
#0219 (contains-duplicate-ii)
#0013 (roman-to-integer)
#0012 (integer-to-roman)
#0171 (excel-sheet-column-number)
#0268 (missing-number)
#0326 (power-of-three)
#0231 (power-of-two)
#0342 (power-of-four)

20.06 (9)
#0021 (merge-two-sorted-lists)
#0036 (valid-sudoku)
#0062 (unique-paths)
#0042 (trapping-rain-water) (2 pointers - read other solutions)
#0049 (group-anagrams)
#0453 (minimum-moves-to-equal-array-elements) !!!
#0200 (number-of-islands)
#0695 (max-area-of-island)
#0038 (count-and-say)

21.06 (4)
#0017 (letter-combinations-of-a-phone-number)
#0014 (longest-common-prefix)
#0050 (powx-n)
#0098 (validate-binary-search-tree)

22.06 (1)
#0150 (evaluate-reverse-polish-notation)

23.06 (1)
#0019 (remove-nth-node-from-end-of-list)

24.06 (0)

25.06 (4)
#0094 (binary-tree-inorder-traversal) 
#0079 (word-search)
#0212 (word-search-ii) !! bad solution, need trie
#0172 (trailling-zeroes) ?? need to view

26.06 (4)
#0999 (available-captures-for-rook)
#0027 (remove-element)
#0849 (maximize-distance-to-closest-person)
#0883 (projection-area-of-3d-shapes)

27.06 (2)
#0637 (average-of-levels-in-binary-tree)
#0120 (triangle)

28.06 (0)

29.06 (0)

30.07 (0)

-------------July--------------

01.07 (0)

02.07 (0)

03.07 (0)

04.07 (0)

05.07 (0)

06.07 (4)
#0796 rotate-string (needs KMP)
#0994 rotting-oranges
#0543 diameter-of-binary-tree
#0415 add-strings

07.07 (1)
#0492 construct-the-rectangle

08.07 (11)
#0122 best-time-to-buy-and-sell-stock-ii
#1108 defanging-an-ip-address
#0189 rotate-array
#0162 find-peak-element
#0896 monotonic-array
#0747 largest-number-at-least-twice-of-others
#0179 largest-number
#0784 letter-case-permutation
#0976 largest-perimeter-triangle
#0917 reverse-only-letters
#0520 detect-capital

09.07 (8)
#0485 max-consecutive-ones
#0606 construct-string-from-binary-tree
#1071 greatest-common-divisor-of-strings
#0860 lemonade-change
#0881 boats-to-save-people
#1046 last-stone-weight
#0594 longest-harmonious-subsequence
#0541 reverse-string-ii

10.07 (5)
#0022 generate-parentheses
#0292 nim-game
#0037 sudoku-solver
#0028 implement-strstr (needed Z-function) !!!
#0322 coin-change

11.07 (9)
#0111 minimum-depth-of-binary-tree
#0983 minimum-cost-for-tickets
#0232 implement-queue-using-stacks
#0226 ivert-binary-tree
#0222 count-complete-tree-nodes
#1025 divisor-game
#0680 valid-palindrome-ii
#0151 reverse-words-in-a-string
#1002 find-common-characters

12.07 (2)
#0350 intersection-of-two-arrays-ii
#0349 intersection-of-two-arrays

13.07 (11)
#0643 maximum-average-subarray-i
#0064 minimum-path-sum
#0113 path-sum-ii
#0257 binary-tree-paths
#0868 binary-gap
#1089 duplicate-zeros
#1007 minimum-domino-rotations-for-equal-row
#0653 two-sum-iv-input-is-a-bst
#0074 search-a-2d-matrix
#0240 search-a-2d-matrix-ii
#0454 4sum-ii

14.07 (0)
Mock-Interview

15.07
#0101 symmetric-tree
#0003 longest-substring-without-repeating-characters
#0002 add-two-numbers
